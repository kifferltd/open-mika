###########################################################################
# Parts copyright (c) 2001, 2002, 2003 by Punch Telematix. All rights     #
# reserved. Parts copyright 2004, 2005, 2006, 2010, 2011 by Chris Gray,   #
# /k/ Embedded Java Solutions. All rights reserved.                       #
#                                                                         #
# Redistribution and use in source and binary forms, with or without      #
# modification, are permitted provided that the following conditions      #
# are met:                                                                #
# 1. Redistributions of source code must retain the above copyright       #
#    notice, this list of conditions and the following disclaimer.        #
# 2. Redistributions in binary form must reproduce the above copyright    #
#    notice, this list of conditions and the following disclaimer in the  #
#    documentation and/or other materials provided with the distribution. #
# 3. Neither the name of Punch Telematix or of /k/ Embedded Java          #
#    solutions nor the names of other contributors may be used to         #
#    endorse or promote products derived from this software without       #
#    specific prior written permission.                                   #
#                                                                         #
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED          #
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF    #
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.    #
# IN NO EVENT SHALL PUNCH TELEMATIX, /K/ EMBEDDED JAVA SOLUTIONS OR OTHER #
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,   #
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,     #
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR      #
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF  #
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING    #
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS      #
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.            #
###########################################################################

#
# Debug is set off per default.
#

DEBUG default = false ;

#
# If DETECT_FLYING_PIGS is true, a check will be performed for objects which
# appear to be unreachable in one GC pass and reachable in the next. This of
# course "cannot happen", hence the name ...
# Normally the VM recovers well from these "glitches", so this check should
# be disabled for production code.
#

DETECT_FLYING_PIGS default = false ;

#
# SCHEDULER must be 'oswald' for uClinux.
# For Linux and NetBSD, scheduler must be 'o4p', except on arm and x86,
# where either 'oswald' or 'o4p' are allowed.
#

SCHEDULER default = oswald ;

#
# Java Native Interface support is set on per default.
#

JNI default = true ;

#
# The Garbage Collector is set on per default.
#

GC default = true ;

#
# FILESYSTEM can take the values `native' (meaning use the filesystem of
# the host os) or `vfs' (meaning use Mika's own built-in implementation
# of e2fs).
# The default is `native', i.e. use the hostos filesystem.
#

FILESYSTEM default = native ;

#
# If the hostos filesystem is used then when Mika is run it will translate
# the prefix '{}/' attached to any path into $(FSROOT); e.g. the path
# will be translated to $(FSROOT)/system/wre.jar.
# FSROOT may be an absolute or a relative path; if relative it is interpreted 
# relative to the location of the Mika binary (args[0]), not the current 
# directory of the shell from which Mika was launched.
#

FSROOT default = ../ ;

#
# OROOT will be set via the commandline (by ant). This directory should be used
# by ant to store all of it's output 
#

#
# If Mika is run with no -Xbootclasspath parameter, the bootstrap class 
# loader will search the file $(BOOTCLASSFILE), located in {}/$(BOOTCLASSDIR).
# These variables also specify where the zipfile of bootstrap classes will
# be created, and what name it will be given. 
#

BOOTCLASSDIR  default = "lib/mika" ;
BOOTCLASSFILE default = "wre.jar" ;

TESTDIR default = "test" ;
INSTALLTESTDIR  default = $(OROOT)/$(TESTDIR) ;

#
# network defaults to the hostos native network.
#

NETWORK default = native ;

#
# Modules are default switched off.
#

MODULES default = false ;

#
# Setting SHARED_OBJECTS to true makes it possible to load lib.so files.
#

SHARED_OBJECTS default = true ;

#
# Static linking is default. 
#

STATIC default = false ;

#
# When SHARED_HEAP is enabled, Oswald will export malloc(), calloc(), realloc()
# and free. When a loaded lib.so file wants some memory, they'll get some
# from the same heap as Mika.
#

SHARED_HEAP default = false ;

#
# Support for Java5 language features is disabled by default.
#

JAVA5_SUPPORT default = false ;

#
# The Java Debug Wire Protocol is disabled by default.
#

JDWP default = false ;

#
# When METHOD_DEBUG is enabled, line-number information included in class
# files will be used by the VM when printing a stack trace. Note that this
# substantially increases the amount of memory used to store classes.
#

METHOD_DEBUG = false ;

# By default code will be generated in unicode.c to cover only ISO 8859-1. 
# Specify a colon-separated list of subset numbers to extend Unicode coverage
# to one or more subsets of Unicode: see tool/script/unicode.awk for details.
# Specify 999 to get complete Unicode coverage.  Characters from non-included 
# subsets will be treated by Mika as undefined.
#

UNICODE_SUBSETS default = 0 ;

#
# The mauve and JNI tests are not enabled. (The code to generate them is
# not included in this package).
#

TESTS default = false ;

#
# If no -Xmx=<bytes> flag is specified on the command line, the default heap 
# size is used. The usual suffices 'k', 'm' can be used.
#

DEFAULT_HEAP_SIZE default = 8M ;

#
# If no -Xss=<bytes> flag is specified on the command line, the default Java 
# stack size is used. The usual suffices 'k', 'm' can be used.
# One slot = 16 bytes, so the default is 2048 slots.
#

DEFAULT_STACK_SIZE default = 16384 ;

#
# CPU_MIPS is used to calculate a sensible duration for the OSwald 'tick'.
# Choose a "round" number rather than a pedantically accurate one.
#

CPU_MIPS default = 40 ;

#
# Timers. The timer granularity used internally will never be finer than
# HOST_TIMER_GRANULARITY microseconds (for SCHEDULER=oswald it may be a
# multiple of this, if CPU_MIPS is low). If USE_NANOSLEEP is true, O4P
# will use the nanosleep(2) function to control the timers, otherwise
# usleep(3) is used.
# Note: we say 20 msec when the truth is 10 msec. That's how slow nanosleep runs. 

HOST_TIMER_GRANULARITY default = 20000 ;
USE_NANOSLEEP default = true ;

#
# allows you to specify a different tool chain set then normally used
# for the chosen CPU. 
#
TOOL_CONFIG default = none ;

#
# Enables or disable the java bytecode verifier
#
BYTECODE_VERIFIER default = false ; 

#
# If true use libffi, otherwise use our own hackery.
#
USE_LIBFFI default = false ;

#
# If USE_LIBFFI is true, this location holds the libffi.a file used for linking
#
LIBFFI_A_LOCATION default = $(WONKA_TOP)/core-vm/hal/cpu/$(CPU)/lib ;

#
# Enable or disable re-use of a native thread when the Java thread terminates
#
ENABLE_THREAD_RECYCLING default = false ;

