
$Id: README,v 1.1.1.1 2004/07/12 14:07:44 cvs Exp $

This is the source directory of Oswald. 

Oswald is the RTOS that is used by Wonka to do all it's thread stuff, mutex,
monitor, etc.

Oswald has been designed such that it can run hosted on a Linux machine (ARM
or X86) or it can be run directly on the HW, given that it can produce a
timer tick and service interrupts. Therefore, a lot of features look
strange for an RTOS hosted on another OS (e.g. interrupt handling, thread
switching, ...)

Oswald offers a lot of elements that are not found in other, even commercial
RTOS's, like monitors and mutexes with priority inversion avoidance
(priority inheritance). Heap allocation/deallocation routines and heap
walking procedures, memory block allocation-deallocation, synchronized
bitmaps, mailboxes, queues, signal flags, atomic operations primitives, ...

Oswald also offers a complete test environment for checking itself. The
number of lines for the core Oswald functionality is about 10000, while the
test code is more than 10000 lines of code. The tests make heavy use of
finite state machines to check internal consistency. We use the XP approach
for Oswald.

Although Oswald is used and was made specifically for Wonka, it can be used as a
standalone RTOS with small footprint, if you need one. All available under
the licence of Wonka.

Documentation is still scarce but is being worked on. The best documentation
are the tests themselves. Please check the code. If you have any comments or
suggestions, please mail them to the Wonka mailing list. I will be looking
into the list regularly.

Cheers,

Steven Buytaert (steven.buytaert@acunia.com)
