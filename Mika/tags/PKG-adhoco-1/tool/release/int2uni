#set -x
function integer2unicode() {
  while read x ; do        # read returns nonzero when eof encountered
    let a=$[($x & 0xf000)>>12]
    let b=$[($x & 0x0f00)>>8]
    let c=$[($x & 0x00f0)>>4]
    let d=$[$x & 0x000f]

    z=
    hexdigits="$a $b $c $d"
    for h in $hexdigits; do

      case $h in
        0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9)
          z=$z"$h"
          ;;
        10)
          z=$z"A"
          ;;
        11)
          z=$z"B"
          ;;
        12)
          z=$z"C"
          ;;
        13)
          z=$z"D"
          ;;
        14)
          z=$z"E"
          ;;
        15)
          z=$z"F"
          ;;
      esac

    done

    echo $z

  done
} < $1

function usage() {
  echo "  Convert decimal integers to unicode"
  echo
  echo "  usage:  $0 <input file name>"
  echo "  the input file must contain one decimal number per line; "
  echo "  its last line must end with a linefeed."
  echo "  each decimal integer must be composed of 4 digits"
  echo "  result of the conversion is send to standard output"
}

if [ $# -lt 1 ]; then
  usage
  exit
else
  if [ ! -f $1 ]; then
  echo "  File \"$1\" not found"
  echo
    usage
    exit
  fi
fi

integer2unicode   $1


set -
